{"version":3,"sources":["Components/Card/Card.module.css","Components/Board/Pawn.module.css","Components/BottomPane/BottomPane.module.css","Components/Board/Board.module.css","Components/Scene/Scene.module.css","Components/Board/skull.svg","Components/Card/card-texture.jpg","Components/Hand/Hand.module.css","Components/BottomPane/test.svg","lib/util.js","store/utility.js","store/reducers/cards.js","store/actions/actionTypes.js","store/actions/cards.js","store/actions/index.js","lib/cumulativeRafSchd.js","Components/Board/Pawn.js","Components/Board/Board.js","Components/Card/Card.js","Components/Card/FocusableCard.js","Components/Hand/Hand.js","Components/BottomPane/Deck/Deck.js","Components/BottomPane/BottomPane.js","Components/Scene/Scene.js","App.js","serviceWorker.js","store/reducers/root.js","index.js"],"names":["module","exports","debounce","func","wait","timeout","args","clearTimeout","setTimeout","clamp","number","lower","upper","updateObject","oldObject","updatedValues","initialDeck","Array","fill","map","_","i","key","title","background","Math","random","mana","floor","attack","health","initialOpponentBoard","p","realHealth","originalRotation","x","y","cardWidth","window","innerHeight","initialState","turn","deck","hand","board","opponentBoard","cardGrid","cardRatio","focusedCard","pickedCard","pickedCardPosition","pickedCardRotation","pickedRatio","pickedCardWidth","fakeCardIndex","cardShadowColor","deckPosition","pickedPawn","focusedPawn","animation","handSize","focusSize","pickSize","windowResize","state","width","height","endTurn","draw","randomCard","pawn","sleeping","length","slice","concat","drawRandomCard","pickCard","moveCard","action","diffX","diffY","unpickCard","putCard","filter","card","canAttack","pawnKey","opponentKey","find","pickPawn","focusPawn","dies","removePawn","attackCancel","attackStart","opponent","newPawn","newOpponent","op","attacksEnd","dead","reducer","type","index","position","drawCard","focusCard","resetRotation","moveFakeCard","setDeckPosition","pawnNode","opponentNode","dispatch","getState","cards","style","transform","rect","getBoundingClientRect","opRect","angle","atan2","left","top","distance","hypot","animate","zIndex","offset","min","onfinish","resizeWindow","actionCreators","sum","a","b","cumulativeRafSchd","fn","config","defaultAccumulator","lastArgs","frameId","isArray","from","wrapperFn","forEach","undefined","requestAnimationFrame","newArgs","cancel","cancelAnimationFrame","Pawn","mouseDown","props","info","mouseUp","evt","ref","current","mouseEnter","mouseLeave","React","createRef","this","opacity","duration","picked","role","tabIndex","className","styles","Egg","boxShadow","noContent","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","Float","Attack","Health","alt","src","skull","Component","connect","Board","columns","opRef","setColumns","children","setState","stopPropagation","orderFakeCard","findIndex","pageX","mouseMove","persist","addEventListener","removeEventListener","fakePawn","fakeCard","order","fakeCardOrder","fontSize","cardSize","onMouseMove","Line","borderBottom","pickedCardHeight","Card","Container","containerStyle","Empty","passProps","Text","Mana","hasBackface","Backface","texture","backgroundSize","backgroundRepeat","FocusableCard","center","focus","unfocus","pageY","setRef","display","focused","pointerEvents","focusedSize","transformOrigin","bottom","Hand","lastCard","lastSize","calculateColumn","n","start","cardOverflow","calculateRotate","middle","cardCount","degree","sign","trunc","push","abs","calculateOrigin","parentNode","size","filteredHand","pickedIndex","last","gridColumn","perspective","marginBottom","border","gridTemplateColumns","columnCount","calculateOverFlow","cardHeight","Deck","setPosition","_setPosition","paddingTop","createBoxShadow","color","deckSize","shadowSize","max","end","join","empty","pos","BottomPane","flexFlow","alignItems","gap","char","borderRadius","padding","Scene","unpickPawn","onClick","pickedSize","App","Boolean","location","hostname","match","rootReducer","combineReducers","cardsReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","innerWidth","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eddd9d40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Card_Container__2W8YJ\",\"Card\":\"Card_Card__1a3PF\",\"Backface\":\"Card_Backface__34aEB\",\"Empty\":\"Card_Empty__2juuo\",\"Egg\":\"Card_Egg__2rYth\",\"Text\":\"Card_Text__2SDrG\",\"Float\":\"Card_Float__2KMnF\",\"Attack\":\"Card_Attack__7Lv0U\",\"Health\":\"Card_Health__3Tn_R\",\"Mana\":\"Card_Mana__zwGNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Egg\":\"Pawn_Egg__2gtQs\",\"Float\":\"Pawn_Float__1nyn7\",\"Attack\":\"Pawn_Attack__ryZ0e\",\"Health\":\"Pawn_Health__Q6FiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BottomPane\":\"BottomPane_BottomPane__3wBf5\",\"Container\":\"BottomPane_Container__29iZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__tkmV4\",\"Line\":\"Board_Line__3obCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scene\":\"Scene_Scene__MfpmQ\"};","module.exports = __webpack_public_path__ + \"static/media/skull.44d42c36.svg\";","module.exports = __webpack_public_path__ + \"static/media/card-texture.15ee4520.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hand\":\"Hand_Hand__2DWBX\"};","module.exports = __webpack_public_path__ + \"static/media/test.24636254.svg\";","export const debounce = (func, wait = 250, timeout) => (...args) => {\r\n  clearTimeout(timeout)\r\n  timeout = setTimeout(() => {\r\n    timeout = null\r\n    func(...args)\r\n  }, wait)\r\n}\r\n\r\nexport const clamp = (number, lower, upper) => {\r\n  if (number > upper) return upper\r\n  if (number < lower) return lower\r\n  return number\r\n}\r\n","export function updateObject (oldObject, updatedValues) {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedValues\r\n  }\r\n}\r\n","import { clamp } from '../../lib/util'\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialDeck = Array(30).fill().map((_, i) => ({\r\n  key: `p${i}`,\r\n  title: `${i}. card`,\r\n  background: `rgb(${[0, 0, 0].map(_ => Math.random() * 256 | 0)})`,\r\n  mana: Math.floor(1 + Math.random() * 8),\r\n  attack: Math.floor(1 + Math.random() * 7),\r\n  health: Math.floor(1 + Math.random() * 8)\r\n}))\r\n\r\nconst initialOpponentBoard = Array(9).fill().map((_, i) => ({\r\n  key: `op${i}`,\r\n  background: `rgb(${[0, 0, 0].map(_ => Math.random() * 256 | 0)})`,\r\n  attack: Math.floor(1 + Math.random() * 7),\r\n  health: Math.floor(1 + Math.random() * 8)\r\n})).map(p => ({ ...p, realHealth: p.health }))\r\n\r\nconst originalRotation = { x: 15, y: 0 }\r\n\r\nconst cardRatio = 1.5\r\nconst windowCardRatio = 0.20\r\nconst cardWidth = window.innerHeight * windowCardRatio / cardRatio\r\nconst pickedRatio = 1.2\r\n\r\nconst initialState = {\r\n  turn: true,\r\n  deck: initialDeck,\r\n  hand: [],\r\n  board: [],\r\n  opponentBoard: initialOpponentBoard,\r\n  cardGrid: 6,\r\n  cardWidth,\r\n  cardRatio,\r\n  focusedCard: null,\r\n  pickedCard: null,\r\n  pickedCardPosition: null,\r\n  pickedCardRotation: originalRotation,\r\n  pickedRatio,\r\n  pickedCardWidth: cardWidth * pickedRatio,\r\n  fakeCardIndex: null,\r\n  cardShadowColor: 'white',\r\n  deckPosition: { x: 0, y: 0 },\r\n  pickedPawn: null,\r\n  focusedPawn: null,\r\n  animation: null,\r\n  handSize: '.3em',\r\n  focusSize: '1em',\r\n  pickSize: '.4em'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.END_TURN: return endTurn(state)\r\n    case actionTypes.DRAW_CARD: return drawRandomCard(state)\r\n    case actionTypes.FOCUS_CARD: return updateObject(state, { focusedCard: action.card })\r\n    case actionTypes.PICK_CARD: return pickCard(state)\r\n    case actionTypes.UNPICK_CARD: return unpickCard(state)\r\n    case actionTypes.MOVE_CARD: return moveCard(state, action)\r\n    case actionTypes.RESET_ROTATION: return updateObject(state, { pickedCardRotation: originalRotation })\r\n    case actionTypes.MOVE_FAKE_CARD: return updateObject(state, { fakeCardIndex: action.index })\r\n    case actionTypes.PUT_CARD: return putCard(state)\r\n    case actionTypes.SET_DECK_POSITION: return updateObject(state, { deckPosition: action.position })\r\n    case actionTypes.PICK_PAWN: return pickPawn(state, action.pawnKey)\r\n    case actionTypes.FOCUS_PAWN: return focusPawn(state, action.pawnKey)\r\n    case actionTypes.REMOVE_PAWN: return removePawn(state, action.pawnKey)\r\n    case actionTypes.ATTACK_START: return attackStart(state, action.pawnKey, action.opponentKey)\r\n    case actionTypes.ATTACK_CANCEL: return attackCancel(state)\r\n    case actionTypes.ATTACK: return attack(state, action.pawnKey, action.opponentKey)\r\n    case actionTypes.ATTACKS_END: return attacksEnd(state)\r\n    case actionTypes.WINDOW_RESIZE: return windowResize(state, action.width, action.height)\r\n    default: return state\r\n  }\r\n}\r\n\r\nfunction windowResize (state, width, height) {\r\n  const cardWidth = height * windowCardRatio / state.cardRatio\r\n  return updateObject(state, {\r\n    cardWidth,\r\n    pickedCardWidth: cardWidth * state.pickedRatio\r\n  })\r\n}\r\n\r\nfunction endTurn (state) {\r\n  const draw = state.turn ? {} : randomCard(state.deck, state.hand)\r\n\r\n  return updateObject(state, {\r\n    turn: !state.turn,\r\n    pickedCard: null,\r\n    pickedCardPosition: null,\r\n    pickedCardRotation: originalRotation,\r\n    fakeCardIndex: null,\r\n    pickedPawn: null,\r\n    focusedPawn: null,\r\n    board: state.board.map(pawn => updateObject(pawn, { sleeping: false })),\r\n    ...draw\r\n  })\r\n}\r\n\r\nfunction randomCard (deck, hand) {\r\n  if (hand.length === 9 || deck.length === 0) return {}\r\n  const random = Math.floor(Math.random() * deck.length)\r\n  const randomCard = deck[random]\r\n  return {\r\n    deck: [...deck.slice(0, random), ...deck.slice(random + 1)],\r\n    hand: hand.concat(randomCard)\r\n  }\r\n}\r\n\r\nfunction drawRandomCard (state) {\r\n  return updateObject(state, { ...randomCard(state.deck, state.hand) })\r\n}\r\n\r\nfunction pickCard (state) {\r\n  return updateObject(state, {\r\n    pickedCard: state.focusedCard,\r\n    focusedCard: null\r\n  })\r\n}\r\n\r\nfunction moveCard (state, action) {\r\n  const x = action.x - state.pickedCardWidth / 2\r\n  const y = action.y - state.pickedCardWidth * state.cardRatio / 2\r\n  const diffX = state.pickedCardPosition ? x - state.pickedCardPosition.x : 0\r\n  const diffY = state.pickedCardPosition ? y - state.pickedCardPosition.y : 0\r\n  return updateObject(state, {\r\n    pickedCardPosition: { x, y },\r\n    pickedCardRotation: {\r\n      x: originalRotation.x + clamp(-diffY * 1.5, -30, 30),\r\n      y: originalRotation.y + clamp(diffX * 1.5, -30, 30)\r\n    }\r\n  })\r\n}\r\n\r\nfunction unpickCard (state) {\r\n  return updateObject(state, {\r\n    pickedCard: null,\r\n    pickedCardPosition: null,\r\n    pickedCardRotation: originalRotation,\r\n    fakeCardIndex: null\r\n  })\r\n}\r\n\r\nfunction putCard (state) {\r\n  if (state.board.length === 5) return unpickCard(state)\r\n  const pawn = updateObject(state.pickedCard, { sleeping: true, realHealth: state.pickedCard.health })\r\n  return updateObject(state, {\r\n    board: [...state.board.slice(0, state.fakeCardIndex), pawn, ...state.board.slice(state.fakeCardIndex)],\r\n    hand: state.hand.filter(card => card.key !== state.pickedCard.key),\r\n    pickedCard: null,\r\n    pickedCardPosition: null,\r\n    pickedCardRotation: originalRotation,\r\n    fakeCardIndex: null\r\n  })\r\n}\r\n\r\nexport function canAttack (state, pawnKey, opponentKey) {\r\n  const pawn = state.board.find(p => p.key === pawnKey)\r\n  const opponent = state.opponentBoard.find(p => p.key === opponentKey)\r\n  if (opponent.realHealth <= 0) return false\r\n  if (pawn.sleeping) return false\r\n  return true\r\n}\r\n\r\nfunction pickPawn (state, pawnKey) {\r\n  if (pawnKey === null) { return updateObject(state, { pickedPawn: null }) }\r\n  const pawn = state.board.find(p => p.key === pawnKey)\r\n  return updateObject(state, { pickedPawn: pawn })\r\n}\r\n\r\nfunction focusPawn (state, pawnKey) {\r\n  if (pawnKey === null) {\r\n    return updateObject(state, {\r\n      focusedPawn: null,\r\n      pickedPawn: updateObject(state.pickedPawn, { dies: false })\r\n    })\r\n  }\r\n  const pawn = state.opponentBoard.find(p => p.key === pawnKey)\r\n  if (!canAttack(state, state.pickedPawn.key, pawn.key)) return state\r\n\r\n  return updateObject(state, {\r\n    focusedPawn: updateObject(pawn, { dies: pawn.realHealth - state.pickedPawn.attack <= 0 }),\r\n    pickedPawn: updateObject(state.pickedPawn, { dies: state.pickedPawn.realHealth - pawn.attack <= 0 })\r\n  })\r\n}\r\n\r\nfunction removePawn (state, pawnKey) {\r\n  return updateObject(state, {\r\n    board: state.board.filter(pawn => pawn.key !== pawnKey),\r\n    opponentBoard: state.opponentBoard.filter(pawn => pawn.key !== pawnKey)\r\n  })\r\n}\r\n\r\nfunction attackCancel (state) {\r\n  return updateObject(state, {\r\n    pickedPawn: null,\r\n    focusedPawn: null\r\n  })\r\n}\r\n\r\nfunction attackStart (state, pawnKey, opponentKey) {\r\n  const pawn = state.board.find(p => p.key === pawnKey)\r\n  const opponent = state.opponentBoard.find(p => p.key === opponentKey)\r\n  const newPawn = updateObject(pawn, { sleeping: true, realHealth: pawn.realHealth - opponent.attack })\r\n  const newOpponent = updateObject(opponent, { realHealth: opponent.realHealth - pawn.attack })\r\n  return updateObject(state, {\r\n    pickedPawn: null,\r\n    focusedPawn: null,\r\n    animation: state.pickedPawn.key + '-' + state.focusedPawn.key,\r\n    board: state.board.map(p => p.key === pawn.key ? newPawn : p),\r\n    opponentBoard: state.opponentBoard.map(op => op.key === opponent.key ? newOpponent : op)\r\n  })\r\n}\r\n\r\nfunction attack (state, pawnKey, opponentKey) {\r\n  const pawn = state.board.find(p => p.key === pawnKey)\r\n  const opponent = state.opponentBoard.find(p => p.key === opponentKey)\r\n  const newPawn = updateObject(pawn, { health: pawn.health - opponent.attack })\r\n  const newOpponent = updateObject(opponent, { health: opponent.health - pawn.attack })\r\n  return updateObject(state, {\r\n    board: state.board.map(p => p.key === pawn.key ? newPawn : p),\r\n    opponentBoard: state.opponentBoard.map(op => op.key === opponent.key ? newOpponent : op)\r\n  })\r\n}\r\n\r\nfunction attacksEnd (state) {\r\n  return updateObject(state, {\r\n    board: state.board.map(pawn => pawn.health > 0 ? pawn : updateObject(pawn, { dead: true })),\r\n    opponentBoard: state.opponentBoard.map(pawn => pawn.health > 0 ? pawn : updateObject(pawn, { dead: true }))\r\n  })\r\n}\r\n\r\nexport default reducer\r\n","export const DRAW_CARD = 'DRAW_CARD'\r\nexport const FOCUS_CARD = 'FOCUS_CARD'\r\nexport const PICK_CARD = 'PICK_CARD'\r\nexport const UNPICK_CARD = 'UNPICK_CARD'\r\nexport const MOVE_CARD = 'MOVE_CARD'\r\nexport const RESET_ROTATION = 'RESET_ROTATION'\r\nexport const MOVE_FAKE_CARD = 'MOVE_FAKE_CARD'\r\nexport const PUT_CARD = 'PUT_CARD'\r\nexport const SET_DECK_POSITION = 'SET_DECK_POSITION'\r\nexport const PICK_PAWN = 'PICK_PAWN'\r\nexport const FOCUS_PAWN = 'FOCUS_PAWN'\r\nexport const REMOVE_PAWN = 'REMOVE_PAWN'\r\nexport const ATTACK_START = 'ATTACK_START'\r\nexport const ATTACK_CANCEL = 'ATTACK_CANCEL'\r\nexport const ATTACK = 'ATTACK'\r\nexport const ATTACKS_END = 'ATTACKS_END'\r\nexport const END_TURN = 'END_TURN'\r\n\r\nexport const WINDOW_RESIZE = 'WINDOW_RESIZE'\r\n","import { canAttack } from '../reducers/cards'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nexport const endTurn = () => {\r\n  return { type: actionTypes.END_TURN }\r\n}\r\n\r\nexport const drawCard = () => {\r\n  return { type: actionTypes.DRAW_CARD }\r\n}\r\n\r\nexport const focusCard = (card) => {\r\n  return { type: actionTypes.FOCUS_CARD, card }\r\n}\r\n\r\nexport const pickCard = () => {\r\n  return { type: actionTypes.PICK_CARD }\r\n}\r\n\r\nexport const unpickCard = () => {\r\n  return { type: actionTypes.UNPICK_CARD }\r\n}\r\n\r\nexport const moveCard = (x, y) => {\r\n  return { type: actionTypes.MOVE_CARD, x, y }\r\n}\r\n\r\nexport const resetRotation = () => {\r\n  return { type: actionTypes.RESET_ROTATION }\r\n}\r\n\r\nexport const moveFakeCard = (index) => {\r\n  return { type: actionTypes.MOVE_FAKE_CARD, index }\r\n}\r\n\r\nexport const putCard = () => {\r\n  return { type: actionTypes.PUT_CARD }\r\n}\r\n\r\nexport const setDeckPosition = (position) => {\r\n  return { type: actionTypes.SET_DECK_POSITION, position }\r\n}\r\n\r\nexport const pickPawn = (pawnKey) => {\r\n  return { type: actionTypes.PICK_PAWN, pawnKey }\r\n}\r\n\r\nexport const focusPawn = (pawnKey) => {\r\n  return { type: actionTypes.FOCUS_PAWN, pawnKey }\r\n}\r\n\r\nexport const removePawn = (pawnKey) => {\r\n  return { type: actionTypes.REMOVE_PAWN, pawnKey }\r\n}\r\n\r\nexport function attack (pawnNode, opponentNode) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().cards\r\n    if (!canAttack(state, state.pickedPawn.key, state.focusedPawn.key)) {\r\n      return dispatch({ type: actionTypes.ATTACK_CANCEL })\r\n    }\r\n    const [pawn, opponent] = [state.pickedPawn, state.focusedPawn]\r\n    dispatch({ type: actionTypes.ATTACK_START, pawnKey: pawn.key, opponentKey: opponent.key })\r\n\r\n    pawnNode.style.transform = 'none'\r\n    const rect = pawnNode.getBoundingClientRect()\r\n    const opRect = opponentNode.getBoundingClientRect()\r\n    const angle = Math.atan2(opRect.left - rect.left, rect.top - opRect.top)\r\n    const distance = Math.hypot(opRect.top + opRect.height / 2 - rect.top, opRect.left - rect.left)\r\n    const animation = pawnNode.animate([\r\n      {\r\n        transform: 'none',\r\n        zIndex: 10\r\n      },\r\n      {\r\n        offset: 0.5,\r\n        transform: `rotate(${angle}rad) translateY(${distance * 0.2}px)`\r\n      },\r\n      {\r\n        offset: Math.min(0.75, 0.5 + distance / 8000),\r\n        transform: `rotate(${angle}rad) translateY(${-distance}px)`\r\n      },\r\n      {\r\n        offset: Math.min(1, 0.5 + 6 * distance / 8000),\r\n        transform: `rotate(${angle}rad) translateY(0px)`,\r\n        zIndex: 10\r\n      }\r\n    ], 800)\r\n    animation.onfinish = () => {\r\n      dispatch({ type: actionTypes.ATTACK, pawnKey: pawn.key, opponentKey: opponent.key })\r\n      if (getState().cards.animation === pawn.key + '-' + opponent.key) {\r\n        dispatch({ type: actionTypes.ATTACKS_END })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const resizeWindow = (width, height) => {\r\n  return { type: actionTypes.WINDOW_RESIZE, width, height }\r\n}\r\n","import * as cards from './cards'\r\n\r\nexport const actionCreators = { ...cards }\r\n","const sum = (a, b) => a + b\r\n\r\nconst cumulativeRafSchd = (fn, config = [], defaultAccumulator = sum) => {\r\n  let lastArgs = []\r\n  let frameId = null\r\n\r\n  if (!Array.isArray(config)) config = [config]\r\n  config = Array.from(config, func =>\r\n    func && typeof func !== 'function' ? defaultAccumulator : func\r\n  )\r\n\r\n  const wrapperFn = (...args) => {\r\n    config.forEach((func, i) => {\r\n      if (func && lastArgs[i] !== undefined) { args[i] = func(lastArgs[i], args[i]) }\r\n    })\r\n\r\n    lastArgs = args // Always capture the latest value\r\n\r\n    if (frameId) return // There is already a frame queued\r\n\r\n    // Schedule a new frame\r\n    frameId = requestAnimationFrame(() => {\r\n      frameId = null\r\n      const newArgs = [...lastArgs]\r\n      lastArgs = []\r\n      fn(...newArgs)\r\n    })\r\n  }\r\n\r\n  // Adding cancel property to result function\r\n  wrapperFn.cancel = () => {\r\n    if (!frameId) return\r\n\r\n    cancelAnimationFrame(frameId)\r\n    frameId = null\r\n  }\r\n\r\n  return wrapperFn\r\n}\r\n\r\nexport default cumulativeRafSchd\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { actionCreators } from '../../store/actions'\r\nimport styles from './Pawn.module.css'\r\nimport skull from './skull.svg'\r\n\r\nclass Pawn extends React.Component {\r\n  mouseDown = () => {\r\n    if (this.props.opponent || this.props.info?.sleeping || !this.props.turn) return\r\n    this.props.pickPawn(this.props.info.key)\r\n  }\r\n\r\n  mouseUp = evt => {\r\n    if (!this.props.opponent || !this.props.pickedPawn || !this.props.turn) return\r\n    this.props.attack(this.ref.current)\r\n  }\r\n\r\n  mouseEnter = evt => {\r\n    if (!this.props.opponent || !this.props.pickedPawn) return\r\n    this.props.focusPawn(this.props.info.key)\r\n  }\r\n\r\n  mouseLeave = evt => {\r\n    if (!this.props.opponent || !this.props.pickedPawn) return\r\n    this.props.focusPawn(null)\r\n  }\r\n\r\n  ref = React.createRef()\r\n\r\n  componentDidUpdate () {\r\n    if (this.props.info?.dead) {\r\n      this.ref.current.animate([\r\n        { opacity: 1 },\r\n        { opacity: 0 }\r\n      ], {\r\n        duration: 800,\r\n        fill: 'forwards'\r\n      }).onfinish = () => this.props.removePawn(this.props.info.key)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const dies = (this.props.focusedPawn?.key === this.props.info?.key && this.props.focusedPawn?.dies) ||\r\n    (this.props.picked && this.props.pickedPawn?.dies)\r\n    return (\r\n      <div role='button' tabIndex={0} ref={this.ref} className={styles.Egg} style={{\r\n        ...this.props.style,\r\n        background: this.props.info?.background,\r\n        transform: this.props.picked && 'scale(1.2, 1.2)',\r\n        boxShadow: !this.props.turn || this.props.noContent || this.props.opponent || (!this.props.info?.sleeping\r\n          ? '0 0 8px 4px green' : this.props.picked && '0 4px 2px 0 rgba(0,0,0,0.5)')\r\n      }}\r\n      onMouseDown={this.mouseDown}\r\n      onMouseUp={this.mouseUp}\r\n      onMouseEnter={this.mouseEnter}\r\n      onMouseLeave={this.mouseLeave} >\r\n        { this.props.noContent || <>\r\n          <div className={styles.Float + ' ' + styles.Attack}>{this.props.info.attack}</div>\r\n          <div className={styles.Float + ' ' + styles.Health}>{this.props.info.health}</div>\r\n          {dies && <img alt='dies' src={skull}/>}\r\n        </>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  focusedPawn: state.cards.focusedPawn,\r\n  pickedPawn: state.cards.pickedPawn,\r\n  turn: state.cards.turn\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  pickPawn: key => dispatch(actionCreators.pickPawn(key)),\r\n  focusPawn: key => dispatch(actionCreators.focusPawn(key)),\r\n  removePawn: key => dispatch(actionCreators.removePawn(key))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pawn)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cumulativeRafSchd from '../../lib/cumulativeRafSchd'\r\nimport { actionCreators } from '../../store/actions'\r\nimport styles from './Board.module.css'\r\nimport Pawn from './Pawn'\r\n\r\nclass Board extends React.Component {\r\n  state = {\r\n    columns: []\r\n  }\r\n\r\n  ref = React.createRef()\r\n  opRef = React.createRef()\r\n\r\n  setColumns = cumulativeRafSchd(() => {\r\n    const columns = Array.from(this.ref.current.children).map(card => {\r\n      const rect = card.getBoundingClientRect()\r\n      return rect.left + rect.width / 2\r\n    })\r\n    this.setState({ columns })\r\n  })\r\n\r\n  componentDidUpdate () {\r\n    if (this.props.board.length === this.state.columns.length) return\r\n    this.setColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    window.addEventListener('resize', this.setColumns)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener('resize', this.setColumns)\r\n  }\r\n\r\n  mouseUp = evt => {\r\n    if (this.props.pickedCard) {\r\n      evt.stopPropagation()\r\n      this.orderFakeCard.cancel()\r\n      this.props.putCard()\r\n    }\r\n  }\r\n\r\n  orderFakeCard = cumulativeRafSchd(evt => {\r\n    let index = this.state.columns.findIndex(x => evt.pageX < x)\r\n    if (index === -1) index = this.state.columns.length\r\n    this.props.moveFakeCard(index)\r\n  })\r\n\r\n  mouseMove = evt => {\r\n    if (!this.state.columns.length || !this.props.pickedCard || this.props.board.length === 5) return\r\n    evt.persist()\r\n    this.orderFakeCard(evt)\r\n  }\r\n\r\n  mouseLeave = () => {\r\n    if (!this.state.columns.length || !this.props.pickedCard || this.props.board.length === 5) return\r\n    this.orderFakeCard.cancel()\r\n    this.props.moveFakeCard(null)\r\n  }\r\n\r\n  attack = (opponentNode) => {\r\n    const pawn = this.ref.current.children[this.props.board.findIndex(card => card.key === this.props.pickedPawn.key)]\r\n    this.props.attack(pawn, opponentNode)\r\n  }\r\n\r\n  render () {\r\n    const fakePawn = this.props.fakeCard && (\r\n      <Pawn noContent style={{\r\n        order: this.props.fakeCardOrder,\r\n        fontSize: this.props.cardSize\r\n      }}/>\r\n    )\r\n\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n      <div className={styles.Board} onMouseMove={this.mouseMove} onMouseUp={this.mouseUp}\r\n        onMouseLeave={this.mouseLeave}>\r\n        <div ref={this.opRef} className={styles.Line} style={{ borderBottom: '3px dotted gray' }}>\r\n          {this.props.opponentBoard.map(card =>\r\n            <Pawn opponent attack={this.attack} key={card.key} info={card}\r\n              style={{ fontSize: this.props.cardSize }}/>)}\r\n        </div>\r\n        <div ref={this.ref} className={styles.Line}>\r\n          {this.props.board.map((card, i) => (\r\n            <Pawn key={card.key} info={card} picked={this.props.pickedPawn?.key === card.key} style={{\r\n              order: 2 * i,\r\n              fontSize: this.props.cardSize\r\n            }}/>\r\n          ))}\r\n          { fakePawn }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  board: state.cards.board,\r\n  opponentBoard: state.cards.opponentBoard,\r\n  pickedCard: state.cards.pickedCard,\r\n  pickedCardWidth: state.cards.pickedCardWidth,\r\n  pickedCardHeight: state.cards.pickedCardWidth * state.cards.cardRatio,\r\n  fakeCard: state.cards.fakeCardIndex !== null,\r\n  fakeCardOrder: 2 * state.cards.fakeCardIndex - 1,\r\n  cardSize: state.cards.pickSize,\r\n  pickedPawn: state.cards.pickedPawn,\r\n  focusedPawn: state.cards.focusedPawn\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  moveFakeCard: index => dispatch(actionCreators.moveFakeCard(index)),\r\n  putCard: () => dispatch(actionCreators.putCard()),\r\n  attack: (pawnNode, opponentNode) => dispatch(actionCreators.attack(pawnNode, opponentNode))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)\r\n","import React from 'react'\r\nimport styles from './Card.module.css'\r\nimport texture from './card-texture.jpg'\r\n\r\nclass Card extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className={styles.Container} style={this.props.containerStyle}>\r\n        <div className={`${styles.Card} ${this.props.noContent ? styles.Empty : ''}`} style={this.props.style} {...this.props.passProps}>\r\n          { this.props.noContent ||\r\n          <>\r\n            <div className={styles.Egg} style={{ background: this.props.info.background }}></div>\r\n            <div className={styles.Text}>{this.props.info?.title}</div>\r\n            <div className={styles.Float + ' ' + styles.Attack}>{this.props.info.attack}</div>\r\n            <div className={styles.Float + ' ' + styles.Health}>{this.props.info.health}</div>\r\n            <div className={styles.Float + ' ' + styles.Mana}>{this.props.info.mana}</div>\r\n          </>\r\n          }\r\n          {this.props.hasBackface &&\r\n            <div className={styles.Backface} style={{\r\n              background: `url(${texture})`,\r\n              backgroundSize: 'cover',\r\n              backgroundRepeat: 'repeat'\r\n            }}>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { actionCreators } from '../../store/actions'\r\nimport Card from './Card'\r\n\r\nclass FocusableCard extends React.Component {\r\n  state = {\r\n    center: 0\r\n  }\r\n\r\n  focus = () => {\r\n    if (this.props.pickedCard) return\r\n    this.props.focusCard(this.props.info)\r\n    // this.setState({ center: evt.pageX })\r\n  }\r\n\r\n  unfocus = () => {\r\n    this.props.focusCard(null)\r\n  }\r\n\r\n  mouseDown = evt => {\r\n    if (!this.props.turn) return\r\n    this.props.pickCard()\r\n    this.props.moveCard(evt.pageX, evt.pageY)\r\n  }\r\n\r\n  render () {\r\n    const passProps = {\r\n      role: 'button',\r\n      tabIndex: 0,\r\n      onMouseDown: this.mouseDown,\r\n      onMouseEnter: this.focus,\r\n      onMouseLeave: this.unfocus,\r\n      ref: this.props.setRef\r\n    }\r\n    return (\r\n      <>\r\n        <Card info={this.props.info} passProps={passProps} hasBackface={this.props.hasBackface}\r\n          containerStyle={{ ...this.props.containerStyle, display: this.props.picked ? 'none' : '' }}\r\n          style={{ ...this.props.style, opacity: this.props.focused ? 0 : 1 }}/>\r\n\r\n        {this.props.focused &&\r\n        <>\r\n          <Card noContent\r\n            containerStyle={{ ...this.props.containerStyle, pointerEvents: 'none' }}\r\n            style={this.props.style}/>\r\n\r\n          <Card info={this.props.info}\r\n            containerStyle={{\r\n              ...this.props.containerStyle,\r\n              fontSize: this.props.focusedSize,\r\n              position: 'absolute',\r\n              transform: 'none',\r\n              transformOrigin: 'center',\r\n              left: '-50%',\r\n              bottom: '90%',\r\n              pointerEvents: 'none',\r\n              zIndex: 4\r\n            }}/>\r\n        </>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pickedCard: state.cards.pickedCard,\r\n  focusedSize: state.cards.focusSize,\r\n  turn: state.cards.turn\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  focusCard: card => dispatch(actionCreators.focusCard(card)),\r\n  pickCard: () => dispatch(actionCreators.pickCard()),\r\n  moveCard: (x, y) => dispatch(actionCreators.moveCard(x, y))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FocusableCard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '../Card/Card'\r\nimport FocusableCard from '../Card/FocusableCard'\r\nimport styles from './Hand.module.css'\r\n\r\nclass Hand extends React.Component {\r\n  state={\r\n    lastCard: null,\r\n    lastSize: 0\r\n  }\r\n\r\n  setRef = ref => {\r\n    this.setState({ lastCard: ref })\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (this.props.cards.length < this.state.lastSize) {\r\n      return this.setState({\r\n        lastCard: null,\r\n        lastSize: this.props.cards.length\r\n      })\r\n    }\r\n    if (!this.state.lastCard || this.props.cards.length === this.state.lastSize) return\r\n    const card = this.state.lastCard\r\n    const rect = card.getBoundingClientRect()\r\n    card.parentNode.animate([\r\n      {\r\n        position: 'absolute',\r\n        left: this.props.deckPosition.x - rect.left + 'px',\r\n        bottom: -(this.props.deckPosition.y - rect.top) + 'px',\r\n        transform: 'none',\r\n        fontSize: this.props.size\r\n      },\r\n      {\r\n        offset: 0.25,\r\n        left: '-50%',\r\n        bottom: '105%',\r\n        transform: 'none',\r\n        fontSize: `calc(2.5 * ${this.props.size})` // TODO THIS CAN BE FIXED ON STORE\r\n      },\r\n      {\r\n        offset: 0.90,\r\n        left: '-50%',\r\n        bottom: '105%',\r\n        transform: 'none',\r\n        fontSize: `calc(2.5 * ${this.props.size})`\r\n      },\r\n      {\r\n        position: 'absolute',\r\n        left: '0px',\r\n        bottom: '0px'\r\n      }\r\n    ], 2500)\r\n\r\n    card.animate([\r\n      { transform: 'rotateX(0deg)  rotateY(180deg)' },\r\n      { transform: 'rotateX(45deg)  rotateY(225deg)' },\r\n      { transform: 'rotateX(90deg) rotateY(270deg)' },\r\n      {\r\n        offset: 0.25,\r\n        transform: 'rotateX(0deg)  rotateY(360deg)'\r\n      },\r\n      {\r\n        offset: 0.90,\r\n        transform: 'rotateX(0deg)  rotateY(360deg)'\r\n      },\r\n      { transform: 'rotateX(0deg)  rotateY(360deg)' }\r\n    ], 2500)\r\n    // .finished.then(() => console.log('anim')) NO, USE ONFINISH\r\n    this.setState({\r\n      lastCard: null,\r\n      lastSize: this.props.cards.length\r\n    })\r\n  }\r\n\r\n  calculateColumn = n => {\r\n    const start = this.props.cardOverflow * n + 1\r\n    return `${start} / ${start + this.props.cardGrid}`\r\n  }\r\n\r\n  calculateRotate = n => {\r\n    n++\r\n    const middle = (this.props.cardCount + 1) / 2\r\n    if (n === middle || this.props.cardGrid <= this.props.cardOverflow) return 'rotate(0)'\r\n    const degree = Math.sign(n - middle) * 2 + Math.trunc(n - middle) * 3\r\n    const push = Math.abs(n - middle) ** 3 * 0.05\r\n    return `rotate(${degree}deg) translateY(${push}%)`\r\n  }\r\n\r\n  calculateOrigin = n => {\r\n    n++\r\n    const middle = (this.props.cardCount + 1) / 2\r\n    if (n === middle) return 'center'\r\n    return (n - middle > 0) ? 'bottom left' : 'bottom right'\r\n  }\r\n\r\n  render () {\r\n    const filteredHand = this.props.cards.map((card, i) => {\r\n      const picked = this.props.pickedIndex === i\r\n      const focused = this.props.focusedCard?.key === card.key\r\n      const last = i === this.props.cards.length - 1\r\n      if (this.props.pickedIndex >= 0 && i > this.props.pickedIndex) i--\r\n      return (\r\n        <FocusableCard {...(last ? { setRef: this.setRef, hasBackface: true } : {})}\r\n          key={card.key} info={card} focused={focused} picked={picked}\r\n          containerStyle={{\r\n            fontSize: this.props.size,\r\n            gridColumn: this.calculateColumn(i),\r\n            transform: this.calculateRotate(i),\r\n            transformOrigin: this.calculateOrigin(i),\r\n            zIndex: 3,\r\n            perspective: '500px',\r\n            marginBottom: '-30%'\r\n          }}\r\n          style={{\r\n            border: '2px solid black'\r\n          }}/>)\r\n    })\r\n\r\n    return (\r\n      <div className={styles.Hand} style={{ gridTemplateColumns: `repeat(${this.props.columnCount}, 1fr)` }}>\r\n        {/* To keep container height even when it's empty */}\r\n        <Card noContent containerStyle={{\r\n          fontSize: this.props.size,\r\n          gridColumn: this.calculateColumn(0),\r\n          opacity: 0,\r\n          marginBottom: '-30%'\r\n        }}/>\r\n        {filteredHand}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst calculateOverFlow = cardCount => {\r\n  switch (cardCount) {\r\n    case 1: case 2: return 7\r\n    case 3: case 4: return 4\r\n    case 5: case 6: return 3\r\n    default: return 2\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const pickedIndex = state.cards.hand.findIndex(card => card.key === state.cards.pickedCard?.key)\r\n  const cardCount = state.cards.hand.length - (pickedIndex !== -1)\r\n  const cardOverflow = calculateOverFlow(cardCount)\r\n  return {\r\n    cards: state.cards.hand,\r\n    pickedIndex,\r\n    cardCount,\r\n    cardGrid: state.cards.cardGrid,\r\n    cardOverflow,\r\n    focusedCard: state.cards.focusedCard,\r\n    cardWidth: state.cards.cardWidth,\r\n    cardHeight: state.cards.cardWidth * state.cards.cardRatio,\r\n    columnCount: state.cards.cardGrid + (cardCount - 1) * cardOverflow,\r\n    deckPosition: state.cards.deckPosition,\r\n    size: state.cards.handSize\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Hand)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cumulativeRafSchd from '../../../lib/cumulativeRafSchd'\r\nimport { actionCreators } from '../../../store/actions'\r\nimport Card from '../../Card/Card'\r\n\r\nclass Deck extends React.Component {\r\n  setRef = ref => {\r\n    this.card = ref\r\n  }\r\n\r\n  setPosition = () => {\r\n    const rect = this.card.getBoundingClientRect()\r\n    this.props.setDeckPosition({ x: rect.left, y: rect.top })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setPosition()\r\n    this._setPosition = cumulativeRafSchd(this.setPosition)\r\n    window.addEventListener('resize', this._setPosition)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener('resize', this._setPosition)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Card hasBackface noContent passProps={{ ref: this.setRef }}\r\n          containerStyle={{\r\n            marginBottom: '0.7rem',\r\n            boxShadow: this.props.boxShadow,\r\n            fontSize: this.props.size,\r\n            paddingTop: 0\r\n          }}\r\n          style={{\r\n            border: 'none',\r\n            transform: 'rotateY(180deg)'\r\n          }}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst createBoxShadow = (color, deckSize) => {\r\n  const shadowSize = deckSize < 10 ? deckSize : Math.floor(Math.max(10, deckSize / 2))\r\n  return Array(shadowSize).fill().map((_, i) => {\r\n    const end = i % 2 === 0 ? color : '0 0.65px'\r\n    i = Math.floor(i / 2) + 1\r\n    return `-${i}px ${i}px ${end}`\r\n  }).join()\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cardWidth: state.cards.cardWidth,\r\n  cardHeight: state.cards.cardWidth * state.cards.cardRatio,\r\n  empty: state.cards.deck.length === 0,\r\n  boxShadow: createBoxShadow(state.cards.cardShadowColor, state.cards.deck.length),\r\n  size: state.cards.handSize\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  drawCard: () => dispatch(actionCreators.drawCard()),\r\n  unpickCard: () => dispatch(actionCreators.unpickCard()),\r\n  setDeckPosition: pos => dispatch(actionCreators.setDeckPosition(pos))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Deck)\r\n","import React from 'react'\r\nimport Hand from '../Hand/Hand'\r\nimport styles from './BottomPane.module.css'\r\nimport Deck from './Deck/Deck'\r\nimport char from './test.svg'\r\n\r\nclass BottomPane extends React.Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <div className={styles.BottomPane}>\r\n          <div className={styles.Container}> MANA STUFF </div>\r\n          <div className={styles.Container} style={{\r\n            zIndex: 2,\r\n            display: 'flex',\r\n            flexFlow: 'column nowrap',\r\n            alignItems: 'center',\r\n            gap: '0.5em'\r\n          }}>\r\n            <img alt='CHAR' src={char} style={{\r\n              border: '3px solid brown',\r\n              borderRadius: '50% 50% 0 0',\r\n              padding: '0.2em',\r\n              width: '100px',\r\n              height: '120px'\r\n            }}/>\r\n            <Hand/>\r\n          </div>\r\n          <div className={styles.Container} >\r\n            <Deck/>\r\n          </div>\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BottomPane\r\n","import React from 'react'\r\nimport styles from './Scene.module.css'\r\nimport { actionCreators } from '../../store/actions'\r\nimport { connect } from 'react-redux'\r\nimport Board from '../Board/Board'\r\nimport Card from '../Card/Card'\r\nimport cumulativeRafSchd from '../../lib/cumulativeRafSchd'\r\nimport { debounce } from '../../lib/util'\r\nimport BottomPane from '../BottomPane/BottomPane'\r\n\r\nclass Scene extends React.Component {\r\n  mouseMove = evt => {\r\n    if (this.props.pickedCard) {\r\n      evt.persist()\r\n      this.props.moveCard(evt.pageX, evt.pageY)\r\n      this.props.resetRotation()\r\n    }\r\n  }\r\n\r\n  mouseUp = () => {\r\n    if (this.props.pickedCard) this.props.unpickCard()\r\n    else if (this.props.pickedPawn) this.props.unpickPawn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    if (this.props.turn) {\r\n      for (let i = 0; i < 3; i++) {\r\n        setTimeout(() => {\r\n          this.props.drawCard()\r\n        }, 500 * (i + 1))\r\n      }\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\r\n        <div onMouseMove={this.mouseMove} onMouseUp={this.mouseUp} className={styles.Scene} >\r\n          <div>\r\n            <button onClick={this.props.endTurn}>{this.props.turn ? 'End Turn' : 'Not Your Turn'}</button>\r\n          </div>\r\n          <Board/>\r\n          <BottomPane/>\r\n        </div>\r\n\r\n        {this.props.pickedCard &&\r\n            <Card info={this.props.pickedCard} containerStyle={{\r\n              fontSize: this.props.pickedSize,\r\n              position: 'fixed',\r\n              left: this.props.pickedCardPosition.x,\r\n              top: this.props.pickedCardPosition.y,\r\n              pointerEvents: 'none',\r\n              zIndex: 10,\r\n              perspective: '500px'\r\n            }}\r\n            style={{\r\n              transform: this.props.pickedCardRotation\r\n            }}/>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pickedCard: state.cards.pickedCard,\r\n  pickedCardWidth: state.cards.pickedCardWidth,\r\n  pickedCardHeight: state.cards.pickedCardWidth * state.cards.cardRatio,\r\n  pickedCardPosition: state.cards.pickedCardPosition,\r\n  pickedCardRotation: `rotateX(${state.cards.pickedCardRotation.x}deg) rotateY(${state.cards.pickedCardRotation.y}deg)`,\r\n  pickedSize: state.cards.pickSize,\r\n  pickedPawn: state.cards.pickedPawn,\r\n  turn: state.cards.turn\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  endTurn: () => dispatch(actionCreators.endTurn()),\r\n  drawCard: () => dispatch(actionCreators.drawCard()),\r\n  unpickCard: () => dispatch(actionCreators.unpickCard()),\r\n  moveCard: cumulativeRafSchd((x, y) => dispatch(actionCreators.moveCard(x, y))),\r\n  resetRotation: debounce(() => { dispatch(actionCreators.resetRotation()) }, 120),\r\n  unpickPawn: () => dispatch(actionCreators.pickPawn(null))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scene)\r\n","import React from 'react'\nimport './App.css'\nimport Scene from './Components/Scene/Scene'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Scene/>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport cardsReducer from './cards'\r\n\r\nconst rootReducer = combineReducers({\r\n  cards: cardsReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap-reboot.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport rootReducer from './store/reducers/root'\nimport cumulativeRafSchd from './lib/cumulativeRafSchd'\nimport { actionCreators } from './store/actions'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nwindow.addEventListener('resize', cumulativeRafSchd(() => {\n  store.dispatch(actionCreators.resizeWindow(window.innerWidth, window.innerHeight))\n}))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}